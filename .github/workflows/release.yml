on:
    push:
        tags:
            - 'v*'
    workflow_dispatch:

permissions:
    packages: write
    contents: write

name: Build & release

jobs:
    create-release:
        name: Create Release
        runs-on: ubuntu-latest
        outputs:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            release_id: ${{ steps.create_release.outputs.id }}
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  submodules: true

            - name: Create Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ github.ref }}
                  release_name: ${{ github.ref }}
                  draft: true
                  prerelease: false

    build-and-upload:
        name: Build & Upload
        runs-on: ubuntu-latest
        needs: create-release
        strategy:
            fail-fast: true
            matrix:
                architecture: [arm64, arm, amd64]

        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  submodules: true

            - name: Build for ${{ matrix.architecture }}
              run: sudo ./build.sh ${{ matrix.architecture }}

            - name: Upload ${{ matrix.architecture }} release
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ needs.create-release.outputs.upload_url }}
                  asset_path: ./artifacts/ehttps-${{ matrix.architecture }}.tar.gz
                  asset_name: ehttps-${{ matrix.architecture }}.tar.gz
                  asset_content_type: application/tar+gzip

    cleanup:
        name: Cleanup Release
        runs-on: ubuntu-latest
        needs: [create-release, build-and-upload]
        if: failure()
        steps:
            - name: Delete Defunct Release
              uses: liudonghua123/delete-release-action@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  release_id: ${{ needs.create-release.outputs.release_id }}
